<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>InstructionBuilder.ConstGetElementPtrInBounds Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ConstGetElementPtrInBounds method" /><meta name="System.Keywords" content="InstructionBuilder.ConstGetElementPtrInBounds method" /><meta name="Microsoft.Help.F1" content="Llvm.NET.InstructionBuilder.ConstGetElementPtrInBounds" /><meta name="Microsoft.Help.Id" content="M:Llvm.NET.InstructionBuilder.ConstGetElementPtrInBounds(Llvm.NET.Values.Value,Llvm.NET.Values.Value[])" /><meta name="Description" content="Creates a that accesses an element of a type referenced by a pointer" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Llvm.NET" /><meta name="file" content="M_Llvm_NET_InstructionBuilder_ConstGetElementPtrInBounds" /><meta name="guid" content="M_Llvm_NET_InstructionBuilder_ConstGetElementPtrInBounds" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Llvm.NET interop wrapper library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="47ec5af0-5c1c-443e-b2b3-158a100dc594.htm" title="Llvm.NET interop wrapper library" tocid="roottoc">Llvm.NET interop wrapper library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Llvm_NET.htm" title="Namespaces" tocid="R_Project_Llvm_NET">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Llvm_NET.htm" title="Llvm.NET" tocid="N_Llvm_NET">Llvm.NET</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Llvm_NET_InstructionBuilder.htm" title="InstructionBuilder Class" tocid="T_Llvm_NET_InstructionBuilder">InstructionBuilder Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Llvm_NET_InstructionBuilder.htm" title="InstructionBuilder Methods" tocid="Methods_T_Llvm_NET_InstructionBuilder">InstructionBuilder Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_Add.htm" title="Add Method " tocid="M_Llvm_NET_InstructionBuilder_Add">Add Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Llvm_NET_InstructionBuilder_Alloca.htm" title="Alloca Method " tocid="Overload_Llvm_NET_InstructionBuilder_Alloca">Alloca Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_And.htm" title="And Method " tocid="M_Llvm_NET_InstructionBuilder_And">And Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_ArithmeticShiftRight.htm" title="ArithmeticShiftRight Method " tocid="M_Llvm_NET_InstructionBuilder_ArithmeticShiftRight">ArithmeticShiftRight Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_BitCast.htm" title="BitCast Method " tocid="M_Llvm_NET_InstructionBuilder_BitCast">BitCast Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Llvm_NET_InstructionBuilder_Branch.htm" title="Branch Method " tocid="Overload_Llvm_NET_InstructionBuilder_Branch">Branch Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Llvm_NET_InstructionBuilder_Call.htm" title="Call Method " tocid="Overload_Llvm_NET_InstructionBuilder_Call">Call Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Llvm_NET_InstructionBuilder_Compare.htm" title="Compare Method " tocid="Overload_Llvm_NET_InstructionBuilder_Compare">Compare Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_ConstGetElementPtrInBounds.htm" title="ConstGetElementPtrInBounds Method " tocid="M_Llvm_NET_InstructionBuilder_ConstGetElementPtrInBounds">ConstGetElementPtrInBounds Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_DebugTrap.htm" title="DebugTrap Method " tocid="M_Llvm_NET_InstructionBuilder_DebugTrap">DebugTrap Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Llvm_NET_InstructionBuilder_Dispose.htm" title="Dispose Method " tocid="Overload_Llvm_NET_InstructionBuilder_Dispose">Dispose Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_DoNothing.htm" title="DoNothing Method " tocid="M_Llvm_NET_InstructionBuilder_DoNothing">DoNothing Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_ExtractValue.htm" title="ExtractValue Method " tocid="M_Llvm_NET_InstructionBuilder_ExtractValue">ExtractValue Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_FAdd.htm" title="FAdd Method " tocid="M_Llvm_NET_InstructionBuilder_FAdd">FAdd Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_FDiv.htm" title="FDiv Method " tocid="M_Llvm_NET_InstructionBuilder_FDiv">FDiv Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_Finalize.htm" title="Finalize Method " tocid="M_Llvm_NET_InstructionBuilder_Finalize">Finalize Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_FMul.htm" title="FMul Method " tocid="M_Llvm_NET_InstructionBuilder_FMul">FMul Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_FNeg.htm" title="FNeg Method " tocid="M_Llvm_NET_InstructionBuilder_FNeg">FNeg Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_FPExt.htm" title="FPExt Method " tocid="M_Llvm_NET_InstructionBuilder_FPExt">FPExt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_FPToUICast.htm" title="FPToUICast Method " tocid="M_Llvm_NET_InstructionBuilder_FPToUICast">FPToUICast Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_FSub.htm" title="FSub Method " tocid="M_Llvm_NET_InstructionBuilder_FSub">FSub Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_GetElementPtr.htm" title="GetElementPtr Method " tocid="M_Llvm_NET_InstructionBuilder_GetElementPtr">GetElementPtr Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Llvm_NET_InstructionBuilder_GetElementPtrInBounds.htm" title="GetElementPtrInBounds Method " tocid="Overload_Llvm_NET_InstructionBuilder_GetElementPtrInBounds">GetElementPtrInBounds Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_GetStructElementPointer.htm" title="GetStructElementPointer Method " tocid="M_Llvm_NET_InstructionBuilder_GetStructElementPointer">GetStructElementPointer Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_InsertValue.htm" title="InsertValue Method " tocid="M_Llvm_NET_InstructionBuilder_InsertValue">InsertValue Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_IntCast.htm" title="IntCast Method " tocid="M_Llvm_NET_InstructionBuilder_IntCast">IntCast Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_IntToPointer.htm" title="IntToPointer Method " tocid="M_Llvm_NET_InstructionBuilder_IntToPointer">IntToPointer Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_Load.htm" title="Load Method " tocid="M_Llvm_NET_InstructionBuilder_Load">Load Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_LogicalShiftRight.htm" title="LogicalShiftRight Method " tocid="M_Llvm_NET_InstructionBuilder_LogicalShiftRight">LogicalShiftRight Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_MemCpy.htm" title="MemCpy Method " tocid="M_Llvm_NET_InstructionBuilder_MemCpy">MemCpy Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_MemMove.htm" title="MemMove Method " tocid="M_Llvm_NET_InstructionBuilder_MemMove">MemMove Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_MemSet.htm" title="MemSet Method " tocid="M_Llvm_NET_InstructionBuilder_MemSet">MemSet Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_Mul.htm" title="Mul Method " tocid="M_Llvm_NET_InstructionBuilder_Mul">Mul Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_Neg.htm" title="Neg Method " tocid="M_Llvm_NET_InstructionBuilder_Neg">Neg Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_Not.htm" title="Not Method " tocid="M_Llvm_NET_InstructionBuilder_Not">Not Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_Or.htm" title="Or Method " tocid="M_Llvm_NET_InstructionBuilder_Or">Or Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_PhiNode.htm" title="PhiNode Method " tocid="M_Llvm_NET_InstructionBuilder_PhiNode">PhiNode Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_PointerToInt.htm" title="PointerToInt Method " tocid="M_Llvm_NET_InstructionBuilder_PointerToInt">PointerToInt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_PositionAtEnd.htm" title="PositionAtEnd Method " tocid="M_Llvm_NET_InstructionBuilder_PositionAtEnd">PositionAtEnd Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_PositionBefore.htm" title="PositionBefore Method " tocid="M_Llvm_NET_InstructionBuilder_PositionBefore">PositionBefore Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Llvm_NET_InstructionBuilder_Return.htm" title="Return Method " tocid="Overload_Llvm_NET_InstructionBuilder_Return">Return Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_SDiv.htm" title="SDiv Method " tocid="M_Llvm_NET_InstructionBuilder_SDiv">SDiv Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_ShiftLeft.htm" title="ShiftLeft Method " tocid="M_Llvm_NET_InstructionBuilder_ShiftLeft">ShiftLeft Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_SignExtend.htm" title="SignExtend Method " tocid="M_Llvm_NET_InstructionBuilder_SignExtend">SignExtend Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_SignExtendOrBitCast.htm" title="SignExtendOrBitCast Method " tocid="M_Llvm_NET_InstructionBuilder_SignExtendOrBitCast">SignExtendOrBitCast Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_SIToFPCast.htm" title="SIToFPCast Method " tocid="M_Llvm_NET_InstructionBuilder_SIToFPCast">SIToFPCast Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_SRem.htm" title="SRem Method " tocid="M_Llvm_NET_InstructionBuilder_SRem">SRem Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_Store.htm" title="Store Method " tocid="M_Llvm_NET_InstructionBuilder_Store">Store Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_Sub.htm" title="Sub Method " tocid="M_Llvm_NET_InstructionBuilder_Sub">Sub Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_Switch.htm" title="Switch Method " tocid="M_Llvm_NET_InstructionBuilder_Switch">Switch Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_Trunc.htm" title="Trunc Method " tocid="M_Llvm_NET_InstructionBuilder_Trunc">Trunc Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_TruncOrBitCast.htm" title="TruncOrBitCast Method " tocid="M_Llvm_NET_InstructionBuilder_TruncOrBitCast">TruncOrBitCast Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_UDiv.htm" title="UDiv Method " tocid="M_Llvm_NET_InstructionBuilder_UDiv">UDiv Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_URem.htm" title="URem Method " tocid="M_Llvm_NET_InstructionBuilder_URem">URem Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_Xor.htm" title="Xor Method " tocid="M_Llvm_NET_InstructionBuilder_Xor">Xor Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_ZeroExtend.htm" title="ZeroExtend Method " tocid="M_Llvm_NET_InstructionBuilder_ZeroExtend">ZeroExtend Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Llvm_NET_InstructionBuilder_ZeroExtendOrBitCast.htm" title="ZeroExtendOrBitCast Method " tocid="M_Llvm_NET_InstructionBuilder_ZeroExtendOrBitCast">ZeroExtendOrBitCast Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="Llvm.NET Logo" src="../icons/LlvmNetSmall.png" /></td><td class="titleColumn">InstructionBuilder<span id="LST66F12ED8_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66F12ED8_0?cpp=::|nu=.");</script>ConstGetElementPtrInBounds Method </td></tr></table><span class="introStyle"></span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p><div class="summary">Creates a <a href="T_Llvm_NET_Values_User.htm">User</a> that accesses an element of a type referenced by a pointer</div><p> </p><strong>Namespace:</strong> <a href="N_Llvm_NET.htm">Llvm.NET</a><br /><strong>Assembly:</strong> Llvm.NET (in Llvm.NET.dll) Version: 1.0.5772<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Value</span> <span class="identifier">ConstGetElementPtrInBounds</span>(
	<span class="identifier">Value</span> <span class="parameter">pointer</span>,
	<span class="keyword">params</span> <span class="identifier">Value</span>[] <span class="parameter">args</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">pointer</span></dt><dd>Type: <a href="T_Llvm_NET_Values_Value.htm">Llvm.NET.Values<span id="LST66F12ED8_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66F12ED8_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Value</a><br />pointer to get an element from</dd><dt><span class="parameter">args</span></dt><dd>Type: <span id="LST66F12ED8_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66F12ED8_2?cpp=array&lt;");</script><a href="T_Llvm_NET_Values_Value.htm">Llvm.NET.Values<span id="LST66F12ED8_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66F12ED8_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Value</a><span id="LST66F12ED8_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66F12ED8_4?cpp=&gt;|vb=()|nu=[]");</script><br />additional indeces for computing the resulting pointer</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="T_Llvm_NET_Values_Value.htm">Value</a><br /><p><a href="T_Llvm_NET_Values_User.htm">User</a> for the member access. This is a User as LLVM may 
            optimize the expression to a <a href="T_Llvm_NET_Values_ConstantExpression.htm">ConstantExpression</a> if it 
            can so the actual type of the result may be <a href="T_Llvm_NET_Values_ConstantExpression.htm">ConstantExpression</a>
            or <a href="T_Llvm_NET_Instructions_GetElementPtr.htm">GetElementPtr</a>.</p><p>Note that <span class="parameter">pointer</span> must be a pointer to a structure
            or an excpetion is thrown.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection">
            For details on GetElementPointer (GEP) see http://llvm.org/docs/GetElementPtr.html. The
            basic gist is that the GEP instruction does not access memory, it only computes a pointer
            offset from a base. A common confusion is around the first index and what it means. For C
            and C++ programmers an expression like pFoo-&gt;bar seems to only have a single offset or
            index. However that is only syntactic sugar where the compiler implicitly hides the first
            index. That is, there is no difference between pFoo[0].bar and pFoo-&gt;bar except that the
            former makes the first index explicit. LLVM requires an explicit first index even if it is
            zero, in order to properly compute the offset for a given element in an aggregate type.
            </div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Llvm_NET_InstructionBuilder.htm">InstructionBuilder Class</a></div><div class="seeAlsoStyle"><a href="N_Llvm_NET.htm">Llvm.NET Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>